@model List<MusicQuiz.Web.Models.Admin.UserLoginsViewModel>

@{
    ViewData["Title"] = "User Logins";
}

<h1>@ViewData["Title"]</h1>
<hr />
<p>Welcome to the User Logins page. Here you can see the most recent logins and overall login statistics.</p>

<!-- Chart Wrapper with Responsive Sizing -->
<div class="chart-wrapper">
    <div id="chartContainer">
        <canvas id="loginsChart"></canvas>
    </div>
</div>

<!-- User Logins Table -->
<h3 class="centered mt-4">Recent User Logins</h3>

@if (Model != null && Model.Any())
{
    <table class="table table-modern">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Last Login Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model)
            {
                string rowClass = "";

                if (user.LastLoginDate >= DateTime.UtcNow.AddDays(-7))
                    rowClass = "recent";
                else if (user.LastLoginDate >= DateTime.UtcNow.AddDays(-14))
                    rowClass = "last-week";
                else if (user.LastLoginDate >= DateTime.UtcNow.AddDays(-21))
                    rowClass = "two-weeks";
                else if (user.LastLoginDate >= DateTime.UtcNow.AddDays(-28))
                    rowClass = "three-weeks";
                else
                    rowClass = "older";

                <tr class="@rowClass">
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>@user.LastLoginDate.ToString("yyyy-MM-dd HH:mm")</td>
                </tr>
            }
        </tbody>

    </table>
}
else
{
    <p class="text-center">No user logins to display.</p>
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get data from the model
        const weeklyLoginCounts = @Html.Raw(Json.Serialize(Model.First().WeeklyLoginCounts));

        // Chart data
        const data = {
            labels: ["This Week", "Last Week", "2 Weeks Ago", "3 Weeks Ago", "Older"],
            datasets: [
                {
                    label: "Logins Per Week",
                    data: weeklyLoginCounts,
                    backgroundColor: [
                        "#4CAF50", "#FFC107", "#FF9800", "#FF5722", "#F44336"
                    ],
                    borderRadius: 8,
                    borderWidth: 1,
                    hoverBackgroundColor: [
                        "#66BB6A", "#FFD54F", "#FFB74D", "#FF8A65", "#E57373"
                    ],
                    borderColor: "rgba(0,0,0,0.1)"
                }
            ]
        };

        // Chart options
        const options = {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: false },
                tooltip: {
                    backgroundColor: "rgba(0, 0, 0, 0.7)",
                    titleColor: "#FFF",
                    bodyColor: "#FFF",
                    borderColor: "#CCC",
                    borderWidth: 1,
                    cornerRadius: 6
                }
            },
            layout: { padding: 0 },
            scales: {
                x: {
                    beginAtZero: true,
                    grid: { display: false },
                    ticks: {
                        color: "#666",
                        font: { size: 14, weight: "bold" }
                    }
                },
                y: {
                    beginAtZero: true,
                    grid: {
                        color: "#E0E0E0",
                        borderDash: [5, 5]
                    },
                    ticks: {
                        stepSize: 1,
                        color: "#666",
                        font: { size: 14 }
                    }
                }
            }
        };

        // Set chart size based on screen size
        const chartContainer = document.getElementById("chartContainer");

        function setChartSize() {
            if (window.innerWidth <= 768) {
                // For mobile screens
                chartContainer.style.width = "100%";
                chartContainer.style.height = "50vh";
            } else {
                // For desktop screens
                chartContainer.style.width = "80%";
                chartContainer.style.height = "400px";
            }
        }

        // Resizing screen event listener
        setChartSize();
        window.addEventListener("resize", setChartSize);

        // Create chart
        const ctx = document.getElementById("loginsChart").getContext("2d");
        new Chart(ctx, {
            type: "bar",
            data: data,
            options: options
        });
    });
</script>
