@{
    ViewData["Title"] = "Assessment Results";
}

<h1>@ViewData["Title"]</h1>
<hr />
<p class="text-center">View and analyze student assessment results.</p>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i class="bi bi-exclamation-triangle-fill me-2"></i> @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="text-center mb-4">
    <div class="btn-group-vertical" style="display: flex; flex-direction: column; align-items: center; gap: 10px; flex-wrap: wrap;">
        <a asp-action="Index" class="btn btn-secondary">Back to Dashboard</a>
    </div>
</div>

<form asp-action="ViewAssessmentResults" method="get" class="text-center mb-4">
    <div class="form-group mb-3" style="width: 100%; max-width: 100%;">
        <label for="academicYearFilter" class="form-label">Academic Year:</label>
        <select id="academicYearFilter" name="academicYearFilter" class="form-control form-select" autocomplete="off">
            <option value="">All Years</option>
            @foreach (var year in ViewBag.AcademicYears ?? new List<string>())
            {
                <option value="@year" selected="@(ViewBag.SelectedYear == year)">@year</option>
            }
        </select>
    </div>

    <div class="form-group mb-3" style="width: 100%; max-width: 100%;">
        <label for="topicFilter" class="form-label">Topic:</label>
        <select id="topicFilter" name="topicFilter" class="form-control form-select" autocomplete="off">
            <option value="">All Topics</option>
            @foreach (var topic in Enum.GetValues(typeof(MusicQuiz.Core.Enums.Topic)))
            {
                <option value="@((int)topic)" selected="@(ViewBag.SelectedTopic != null && (int)ViewBag.SelectedTopic == (int)topic)">@topic</option>
            }
        </select>
    </div>

    <div class="form-group mb-3" style="width: 100%; max-width: 100%;">
        <label for="studentFilter" class="form-label">Student:</label>
        <select id="studentFilter" name="studentFilter" class="form-control form-select" autocomplete="off">
            <option value="">All Students</option>
            @foreach (var student in ViewBag.Students ?? new List<object>())
            {
                <option value="@student.Id" selected="@(ViewBag.SelectedStudent == student.Id)">@student.FullName</option>
            }
        </select>
    </div>

    <input type="hidden" name="pageNumber" value="1" />
    <input type="hidden" name="pageSize" value="@ViewBag.PageSize" />

    <div class="mt-3">
        <button type="submit" class="btn btn-primary w-100 w-md-75 mb-2" style="max-width: 300px;">Apply Filters</button>
        <a asp-action="ViewAssessmentResults" class="btn btn-outline-secondary">Reset Filters</a>
    </div>
</form>

<div class="row mb-4">
    <div class="col-md-3">
        <div class="card text-center h-100 shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Total Assessments</h5>
                <p class="display-4">@ViewBag.TotalAssessments</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center h-100 shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Average Score</h5>
                <p class="display-4">@(ViewBag.AverageScore?.ToString("0.00") ?? "N/A")%</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center h-100 shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Highest Score</h5>
                <p class="display-4">@(ViewBag.HighestScore?.ToString("0.00") ?? "N/A")%</p>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card text-center h-100 shadow-sm">
            <div class="card-body">
                <h5 class="card-title">Pass Rate</h5>
                <p class="display-4">@(ViewBag.PassRate?.ToString("0.00") ?? "N/A")%</p>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="scoreData" value='@Html.Raw(Json.Serialize(ViewBag.ScoreData))' />
<input type="hidden" id="userNames" value='@Html.Raw(Json.Serialize(ViewBag.UserNames))' />
<input type="hidden" id="topicColors" value='@Html.Raw(Json.Serialize(ViewBag.TopicColors))' />

<h2 class="text-center">Assessment Score Distribution</h2>
<div id="chartContainer" class="mt-4 mx-auto" style="width: 90%; max-width: 1200px; position: relative;">
    <canvas id="scoreChart"></canvas>
</div>

@if (ViewBag.TopicColorMap != null && ViewBag.TopicColorMap.Count > 0)
{
    <div class="d-flex justify-content-center mt-3 flex-wrap">
        @foreach (var topic in ViewBag.TopicColorMap)
        {
            <div class="d-flex align-items-center mx-3 mb-2">
                <div style="width: 20px; height: 20px; background-color: @topic.Value; margin-right: 5px; border-radius: 3px;"></div>
                <span>@topic.Key</span>
            </div>
        }
    </div>
}

<h3 class="text-center mt-5">Assessment Results</h3>
<div class="text-center mb-2">
    <span class="badge bg-primary">Total: @ViewBag.TotalCount</span>
</div>

@if (ViewBag.AllResults != null && ((List<MusicQuiz.Web.Models.Admin.AssessmentResultModel>)ViewBag.AllResults).Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-hover table-modern">
            <thead>
                <tr>
                    <th>Student</th>
                    <th>ID</th>
                    <th>Year</th>
                    <th>Score</th>
                    <th>Date</th>
                    <th>Topic</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var result in ViewBag.AllResults)
                {
                    string scoreClass = result.UserScore >= 80 ? "table-success" : result.UserScore >= 50 ? "table-warning" : "table-danger";
                    <tr class="@scoreClass">
                        <td>@result.Forename @result.Surname</td>
                        <td>@result.StudentID</td>
                        <td>@result.StudentAcademicYear</td>
                        <td>@result.UserScore.ToString("0.00")%</td>
                        <td>@result.DateOfSubmission.ToString("yyyy-MM-dd HH:mm")</td>
                        <td>@result.SelectedTopic</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (ViewBag.TotalPages > 1)
    {
        <div class="d-flex justify-content-center">
            <div class="pagination">
                @if (ViewBag.PageNumber > 1)
                {
                    <a asp-action="ViewAssessmentResults"
                       asp-route-pageNumber="1"
                       asp-route-pageSize="@ViewBag.PageSize"
                       asp-route-academicYearFilter="@ViewBag.SelectedYear"
                       asp-route-topicFilter="@ViewBag.SelectedTopic"
                       asp-route-studentFilter="@ViewBag.SelectedStudent"
                       class="btn btn-outline-secondary btn-sm me-2">First</a>

                    <a asp-action="ViewAssessmentResults"
                       asp-route-pageNumber="@(ViewBag.PageNumber - 1)"
                       asp-route-pageSize="@ViewBag.PageSize"
                       asp-route-academicYearFilter="@ViewBag.SelectedYear"
                       asp-route-topicFilter="@ViewBag.SelectedTopic"
                       asp-route-studentFilter="@ViewBag.SelectedStudent"
                       class="btn btn-outline-secondary btn-sm me-2">Previous</a>
                }

                <span class="mx-2">Page @ViewBag.PageNumber of @ViewBag.TotalPages</span>

                @if (ViewBag.PageNumber < ViewBag.TotalPages)
                {
                    <a asp-action="ViewAssessmentResults"
                       asp-route-pageNumber="@(ViewBag.PageNumber + 1)"
                       asp-route-pageSize="@ViewBag.PageSize"
                       asp-route-academicYearFilter="@ViewBag.SelectedYear"
                       asp-route-topicFilter="@ViewBag.SelectedTopic"
                       asp-route-studentFilter="@ViewBag.SelectedStudent"
                       class="btn btn-outline-secondary btn-sm ms-2">Next</a>

                    <a asp-action="ViewAssessmentResults"
                       asp-route-pageNumber="@ViewBag.TotalPages"
                       asp-route-pageSize="@ViewBag.PageSize"
                       asp-route-academicYearFilter="@ViewBag.SelectedYear"
                       asp-route-topicFilter="@ViewBag.SelectedTopic"
                       asp-route-studentFilter="@ViewBag.SelectedStudent"
                       class="btn btn-outline-secondary btn-sm ms-2">Last</a>
                }
            </div>
        </div>
    }
}
else
{
    <div class="alert alert-info text-center">
        <i class="bi bi-info-circle me-2"></i> No assessment results found matching the current filters.
    </div>
}

<script src="https://cdn.jsdelivr.net/npm/chart.js@3.7.1/dist/chart.min.js"></script>
<script>
    window.addEventListener('beforeunload', function() {
        if (window.scoreChartInstance) {
            window.scoreChartInstance.destroy();
            window.scoreChartInstance = null;
        }
    });

    document.addEventListener("DOMContentLoaded", function () {
        const chartContainer = document.getElementById('chartContainer');
        chartContainer.innerHTML = '<canvas id="scoreChart"></canvas>';

        const scoreData = JSON.parse(document.getElementById('scoreData').value);
        const userNames = JSON.parse(document.getElementById('userNames').value);
        const barColors = JSON.parse(document.getElementById('topicColors').value);

        if (window.scoreChartInstance) {
            window.scoreChartInstance.destroy();
            window.scoreChartInstance = null;
        }

        if (scoreData && scoreData.length > 0) {
            const ctx = document.getElementById('scoreChart').getContext('2d');

            window.scoreChartInstance = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: userNames,
                    datasets: [{
                        label: 'Score (%)',
                        data: scoreData,
                        backgroundColor: barColors,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: true,
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return `Score: ${context.parsed.y.toFixed(2)}%`;
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            title: {
                                display: true,
                                text: 'Score (%)'
                            }
                        },
                        x: {
                            ticks: {
                                maxRotation: 90,
                                minRotation: 45
                            }
                        }
                    }
                }
            });
        } else {
            chartContainer.innerHTML = '<div class="text-center p-5">No data available for chart</div>';
        }
    });
</script>
