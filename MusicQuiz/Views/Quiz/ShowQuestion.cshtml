@model MusicQuiz.Web.Models.Quiz.QuestionViewModel
@{
    ViewData["Title"] = "Quiz";
    var currentQuestionIndex = ViewBag.CurrentQuestionIndex as int? ?? 0;
    var totalQuestions = ViewBag.TotalQuestions as int? ?? 0;
    var answer = Model.UserAnswer;
    var feedback = ViewBag.Feedback;
    var attemptNumber = Model.AttemptNumber;

    var questionStatuses = ViewBag.QuestionStatuses as List<string> ?? new List<string>();
}
<input type="hidden" id="feedback" value="@feedback" />

@section Scripts {
    <script src="~/js/selectAnswer.js?v=@DateTime.Now.Ticks"></script>
    <script src="~/js/submitAnswer.js?v=@DateTime.Now.Ticks"></script>
    <script src="~/js/enableButtons.js?v=@DateTime.Now.Ticks"></script>
}

<h1>Topic: @Model.SelectedTopic, Difficulty: @Model.SelectedDifficulty</h1>
<hr />
<h2 class="center-content">Question @(currentQuestionIndex + 1)</h2>

@if (!string.IsNullOrEmpty(Model.MusicReferenceFilePath))
{
    <div class="center-content">
        <div class="audio-player">
            <p>Listen to the audio below and answer the question. The file below is <strong>@Model.MusicReferenceName</strong></p>
            <audio controls>
                <source src="@Model.MusicReferenceFilePath" type="audio/*">
                <source src="@Model.MusicReferenceFilePath" type="audio/mpeg">
                <source src="@Model.MusicReferenceFilePath" type="audio/ogg">
                Your browser does not support the audio element.
            </audio>
        </div>

        <div class="audio-player">
            <p>@Model.Question</p>
            <audio controls>
                <source src="@Model.MusicQuestionFilePath" type="audio/*">
                <source src="@Model.MusicQuestionFilePath" type="audio/mpeg">
                <source src="@Model.MusicQuestionFilePath" type="audio/ogg">
                Your browser does not support the audio element.
            </audio>
        </div>
    </div>
}

<hr />

<form method="post" action="/Quiz/NextQuestion">

    <ul class="quiz-options-list">
        @foreach (var option in Model.OptionsForQuiz)
        {
            <div class="option text-center @(answer?.Equals(option) ?? false ? "selected" : "")" id="@option" style="width: 100%; max-width: 100%;">
                <input type="radio" id="@option-radio" name="selectedOption" value="@option" @(answer?.Equals(option) ?? false ? "checked" : "") style="display: none;">
                <label for="@option-radio">@option</label>
            </div>

        }
    </ul>
    <input type="hidden" name="correctAnswer" value="@Model.CorrectAnswer" />
    <input type="hidden" id="attemptNumber" name="attemptNumber" value="@attemptNumber" />
    <input type="hidden" id="firstUserAnswer" name="firstUserAnswer" />
    <div id="feedbackSection"></div>
    <div class="button-container">
        <button type="button" onclick="submitPreviousForm()" class="btn btn-secondary btn-lg" @(currentQuestionIndex == 0 ? "disabled" : "")>Previous</button>
        <button type="button" id="submitButton" onclick="submitAnswer(); enableNextButton();" class="btn btn-danger btn-lg">Submit</button>
        <button type="submit" id="nextButton" class="btn btn-secondary btn-lg" @(currentQuestionIndex == totalQuestions - 1 ? "Complete" : "Next") disabled>
            @(currentQuestionIndex == totalQuestions - 1 ? "Complete" : "Next")
        </button>
    </div>
</form>


<form id="previousForm" method="post" action="/Quiz/PreviousQuestion" style="display:none;"></form>


<hr />

<h3 class="centered">Progress</h3>

<div class="legend-container">
    <h3>Legend</h3>
    <div>
        <div>
            <span>🟢</span><span>Correct (First Attempt)</span>
        </div>
        <div>
            <span>🟠</span><span>Correct (Multiple Attempts)</span>
        </div>
        <div>
            <span>❌</span><span>Incorrect</span>
        </div>
        <div>
            <span>➖</span><span>Unanswered</span>
        </div>
    </div>
</div>
<table class="progress-bar-table">
    <thead>
        <tr>
            @for (int i = 0; i < questionStatuses.Count; i++)
            {
                <th class="progress-bar-header">Q@(i + 1)</th>
            }
        </tr>
    </thead>
    <tbody>
        <tr>
            @foreach (var status in questionStatuses)
            {
                string icon = status switch
                {
                    "correct-first" => "🟢",
                    "correct-multiple" => "🟠",
                    "incorrect" => "❌",
                    _ => "➖"
                };

                <td class="progress-bar-cell">@Html.Raw(icon)</td>
            }
        </tr>
    </tbody>
</table>
